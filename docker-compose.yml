version: '3.4'
services:
  postgres:
    container_name: postgres
    networks:
      some_network:
        aliases:
          - postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=pgpass
      - POSTGRES_USER=pguser
      - POSTGRES_DB=pgdb
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./sql_scripts:/docker-entrypoint-initdb.d
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pguser -d pgdb" ]
      interval: 5s
      timeout: 10s
      start_period: 20s
      retries: 5
  clickhouse-server:
    restart: always
    networks:
      some_network:
        aliases:
          - clickhouse-server
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-server
    environment:
      CLICKHOUSE_USER: chuser
      CLICKHOUSE_PASSWORD: chpass
      CLICKHOUSE_INIT_TIMEOUT: 60
    ports:
      - '8123:8123'
      - '9000:9000'
    volumes:
      - ./clickhouse:/var/lib/clickhouse
      - ./ch_scripts:/docker-entrypoint-initdb.d
    ulimits:
      nofile: 262144
  nats:
    container_name: nats
    networks:
      some_network:
        aliases:
          - nats
    image: nats:latest
    ports:
      - '4222:4222'
      - '6222:6222'
      - '8222:8222'
  redis:
    networks:
      some_network:
        aliases:
          - redis
    image: "redis:latest"
    ports:
      - "6379:6379"
  app:
    restart: always
    networks:
      - some_network
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      POSTGRES_PASSWORD: pgpass
      POSTGRES_USER: pguser
      POSTGRES_DB: pgdb
      POSTGRES_HOST: postgres
      REDIS_DB: 0
      REDIS_HOST: redis:6379
      NATS_QUEUE: good.create
      NATS_HOST: nats
      CLICKHOUSE_HOST: clickhouse-server
      CLICKHOUSE_PASSWORD: chpass
      CLICKHOUSE_USER: chuser
      CLICKHOUSE_DB: default
    depends_on:
      - postgres
      - clickhouse-server
      - redis
      - nats
networks:
  some_network: